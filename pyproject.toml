[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "store_rec_service"
version = "0.1.0"
description = "A product recommendation service API using FastAPI"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]

dependencies = [
    # Core web framework
    "fastapi>=0.104.1,<0.106.0",
    "uvicorn[standard]>=0.23.2,<0.25.0",
    "pydantic>=2.4.2,<3.0.0",
    
    # Machine Learning
    "scikit-learn>=1.3.2,<1.6.0",
    "pandas>=2.1.1,<3.0.0",
    "numpy>=1.26.0,<2.0.0",
    "joblib>=1.3.2,<2.0.0",
    
    # HTTP client and file handling
    "httpx>=0.25.0,<0.28.0",
    "aiofiles>=23.0.0,<25.0.0",
    
    # Production dependencies
    "psutil>=5.9.0,<6.0.0",  # System monitoring
    "prometheus-client>=0.18.0,<0.20.0",  # Metrics
    "python-multipart>=0.0.6,<0.1.0",  # Form data
    "python-jose[cryptography]>=3.3.0,<4.0.0",  # JWT tokens
    "passlib[bcrypt]>=1.7.4,<2.0.0",  # Password hashing
    "slowapi>=0.1.8,<0.2.0",  # Rate limiting
    
    # Database (optional)
    "asyncpg>=0.28.0,<0.30.0",  # PostgreSQL async driver
    "redis>=4.5.0,<6.0.0",  # Redis client
    
    # Optional visualization (only if needed)
    # "matplotlib>=3.8.0,<4.0.0",
    # "seaborn>=0.13.0,<0.14.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.0.0,<9.0.0",
    "pytest-cov>=4.0.0,<6.0.0",
    "pytest-asyncio>=0.21.0,<0.25.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "httpx>=0.25.0,<0.28.0",
    "respx>=0.20.0,<0.25.0",
    
    # Code quality
    "ruff>=0.1.0,<0.3.0",  # Linting and formatting
    "mypy>=1.0.0,<1.9.0",  # Type checking
    "pre-commit>=3.0.0,<4.0.0",  # Pre-commit hooks
    
    # Security
    "bandit>=1.7.0,<2.0.0",  # Security linter
    "safety>=2.3.0,<4.0.0",  # Vulnerability scanner
    "pip-audit>=2.6.0,<3.0.0",  # Dependency audit
    
    # Development tools
    "jupyter>=1.0.0,<2.0.0",
    "ipython>=8.0.0,<9.0.0",
    
    # Visualization for development
    "matplotlib>=3.8.0,<4.0.0",
    "seaborn>=0.13.0,<0.14.0",
]

# Production optional dependencies
production = [
    "gunicorn>=21.0.0,<23.0.0",  # Production WSGI server
    "structlog>=23.0.0,<25.0.0",  # Structured logging
]

# Monitoring optional dependencies
monitoring = [
    "prometheus-client>=0.18.0,<0.20.0",
    "grafana-api>=1.0.3,<2.0.0",
    "opentelemetry-api>=1.20.0,<2.0.0",
    "opentelemetry-sdk>=1.20.0,<2.0.0",
    "opentelemetry-instrumentation-fastapi>=0.41b0,<1.0.0",
]

# AI providers optional dependencies
ai = [
    "openai>=1.3.0,<2.0.0",  # OpenAI API
    "anthropic>=0.7.0,<1.0.0",  # Anthropic Claude API
]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
line-length = 88
target-version = "py39"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "W",   # pycodestyle warnings
    "I",   # isort
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # bandit (security)
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
]
ignore = [
    "E501",   # Line too long (handled by formatter)
    "S101",   # Use of assert (OK in tests)
    "S311",   # Standard pseudo-random generators are not suitable for security/cryptographic purposes
    "T201",   # print statements (OK for debugging)
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "ARG", "B011"]
"scripts/*" = ["T201"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
strict = true
show_error_codes = true
show_error_context = true
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unreachable = true

# Allow some flexibility for third-party libraries
[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "pandas.*",
    "numpy.*",
    "matplotlib.*",
    "seaborn.*",
    "joblib.*",
    "prometheus_client.*",
    "psutil.*",
]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "jupyter>=1.1.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "respx>=0.22.0",
]
